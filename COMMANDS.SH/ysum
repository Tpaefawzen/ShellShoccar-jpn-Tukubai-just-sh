#! /bin/sh

# designed by Nobuaki Tounaka
# written by 321516

# print the usage and exit
print_usage_and_exit () {
  cat <<-__USAGE 1>&2
		Usage   : ${0##*/} [+<n>h] [num=<n>] <file>
		Version : Fri Jul 22 17:40:11 DST 2016
		        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
__USAGE
  exit 1
}

# Initialize
set -u
umask 0022
PATH='/usr/bin:/bin'
IFS=$(printf ' \t\n_'); IFS=${IFS%_}
export IFS LANG=C LC_ALL=C PATH

# parse the arguments
hopt=0
numopt=0
numopt_is_set=0
file=''
case $# in [!0]*)
  i=0
  for arg in "$@"; do
    i=$((i+1))
    case $arg in
      -[0-9]*)
        printf '%s\n' "${arg#-}" | grep -q '^[0-9]\{1,\}$'
        [ $? -eq 0 ] || print_usage_and_exit
        if [ $n_is_set -eq 0 ]; then
          n=${arg#-}
          n_is_set=1
          continue
        fi
        ;;
      num=[0-9]*)
        printf '%s\n' "${arg#num=}" | grep -q '^[0-9]\{1,\}$'
        [ $? -eq 0 ] || print_usage_and_exit
        if [ $numopt_is_set -eq 0 ]; then
          numopt=${arg#num=}
          numopt_is_set=1
          continue
        fi
        ;;
      +*h)
        printf '%s\n' "$1" | grep -q '^+[0-9]*h$' || print_usage_and_exit
        hopt=${1#+}; hopt=${hopt%h}
        case "$hopt" in '') hopt=1;; esac
        hopt=$(expr $hopt + 0)
        continue
        ;;
      -h|--help|--version)
        print_usage_and_exit
        ;;
    esac
    [ $i -eq $# ] || print_usage_and_exit
    file=$arg
  done
  ;;
esac
case "$file" in '') file='-';; esac

# validate the file arguments
if [ \( ! -r "$file" \) -a \( "_$file" != '_-' \) ]; then
  printf '%s: Cannot open the file\n' "${0##*/}" 1>&2
  exit 1
fi
case "$file" in ''|-|/*|./*|../*) :;; *) file="./$file";; esac

# main
export hopt numopt
exec awk -v CONVFMT='%.11g' -v OFMT='%.11g' '
BEGIN {
  hdr_skip = ENVIRON["hopt"];
  for (i=0; i<hdr_skip; i++) {
    if (getline line) {
      print line;
    } else {
      exit;
    }
  }
  num = ENVIRON["numopt"];
}

{
  sum = 0;
  for (i=(num+1); i<=NF; i++) {sum += $i;}
  print $0,sum;
}' "$file"
